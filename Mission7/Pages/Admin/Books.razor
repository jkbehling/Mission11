@page "/admin/books"
@page "/admin"
@inherits OwningComponentBase<IBookstoreRepository>

    

    <table class="table table-sm table-striped table-bordered">

        <thead>
            <tr>
                <th>Book ID</th>
                <th>Title</th>
                <th>Author</th>
                <th>Category</th>
            </tr>

        </thead>

        <tbody>
            @if (BookData?.Count() > 0)
            {
                @foreach (Book b in BookData)
                {
                    <tr>
                        <td>@b.BookId</td>
                        <td>@b.Title</td>
                        <td>@b.Author</td>
                        <td>@b.Category</td>

                       
                        @*Here I used bootstrap to make a button group for the Details, Edit, and Delete buttons*@
                        <td>
                            <div class="btn-group btn-group-justified">
                                <NavLink class="btn btn-info" href="@GetDetailsUrl(b.BookId)">Details</NavLink>
                                <NavLink class="btn btn-warning" href="@GetEditUrl(b.BookId)">Edit</NavLink>
                                <button class="btn btn-danger" @onclick="@(x => RemoveBook(b))">Delete</button>
                            </div>
                        </td>


                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">No Books</td>
                </tr>
            }
        </tbody>

    </table>


    <NavLink class="btn btn-primary" href="/admin/books/create">Create</NavLink>


    @code {

        public IBookstoreRepository repo => Service;
        public IEnumerable<Book> BookData { get; set; }
        protected async override Task OnInitializedAsync()
        {
            await UpdateData();
        }

        public async Task UpdateData()
        {
            BookData = await repo.Books.ToListAsync();
        }

        public string GetDetailsUrl(long id) => $"/admin/books/details/{id}";
        public string GetEditUrl(long id) => $"/admin/books/edit/{id}";

        public async Task RemoveBook(Book b)
        {
            repo.DeleteBook(b);
            await UpdateData();
        }
    }
