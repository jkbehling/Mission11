@page "/admin/purchases"
@inherits OwningComponentBase<IPurchaseRepository>

<PurchaseTable TableTitle="Not Shipped" Purchases="NotShipped"
               ButtonLabel="Ship" PurchaseSelected="CollectPurchase"></PurchaseTable>
<PurchaseTable TableTitle="Shipped" Purchases="ShippedOrder"
               ButtonLabel="Reset" PurchaseSelected="ResetPurchase"></PurchaseTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {

    public IPurchaseRepository repo => Service;

    public IEnumerable<Purchase> AllPurchases { get; set; }
    public IEnumerable<Purchase> NotShipped { get; set; }
    public IEnumerable<Purchase> ShippedOrder { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.Purchases.ToListAsync();
        NotShipped = AllPurchases.Where(x => !x.PurchaseConfirmed);
        ShippedOrder = AllPurchases.Where(x => x.PurchaseConfirmed);
    }

    public void CollectPurchase(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, false);

    private void UpdatePurchase (int id, bool purchased)
    {
        Purchase p = repo.Purchases.FirstOrDefault(x => x.DonationId == id);
        p.PurchaseConfirmed = purchased;
        repo.SavePurchase(p);
    }
}
